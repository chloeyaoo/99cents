{"ast":null,"code":"import{useState,useEffect}from'react';import axios from'axios';import Card,{CardHeader,CardTitle,CardContent}from'./ui/Card';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,LineElement,PointElement,Title,Tooltip,Legend}from'chart.js';import API_BASE_URL from'../apiConfig';// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,LineElement,PointElement,Title,Tooltip,Legend);function Leaderboard(){const[userStats,setUserStats]=useState([]);const[error,setError]=useState(null);useEffect(()=>{const fetchLeaderboardData=async()=>{try{const token=localStorage.getItem('token');const response=await axios.get(`${API_BASE_URL}/api/leaderboard`,{headers:{Authorization:`Bearer ${token}`}});setUserStats(response.data);setError(null);}catch(error){console.error('Error fetching leaderboard data:',error);setError('Failed to load leaderboard data. Please try again later.');}};fetchLeaderboardData();},[]);if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-red-500\",children:error});}// Prepare data for charts\nconst usernames=userStats.map(user=>user.username);// Total Messages Sent Data\nconst totalMessagesData={labels:usernames,datasets:[{label:'Total Messages Sent',data:userStats.map(user=>user.total_messages),backgroundColor:'rgba(54, 162, 235, 0.5)',borderColor:'rgba(54, 162, 235, 1)',borderWidth:1}]};// Total Amount Sent Data (Bar) and Average Amount Per Message (Line) Data\nconst totalAmountData={labels:usernames,datasets:[{type:'bar',label:'Total Amount Sent ($)',data:userStats.map(user=>user.total_amount),backgroundColor:'rgba(75, 192, 192, 0.5)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1,yAxisID:'y1'},{type:'line',label:'Average Amount per Message ($)',data:userStats.map(user=>user.total_messages?(user.total_amount/user.total_messages).toFixed(2):0),borderColor:'rgba(255, 99, 132, 1)',backgroundColor:'rgba(255, 99, 132, 0.5)',borderWidth:2,fill:false,yAxisID:'y2'}]};// Longest Streak Data\nconst longestStreaksData={labels:usernames,datasets:[{label:'Longest Streak (Days)',data:userStats.map(user=>user.longest_streak),backgroundColor:'rgba(153, 102, 255, 0.5)',borderColor:'rgba(153, 102, 255, 1)',borderWidth:1}]};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto mt-20 p-4 space-y-8\",children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{className:\"text-2xl font-bold mb-6\",children:\"Total Messages Sent by User\"})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Bar,{data:totalMessagesData,options:{indexAxis:'y',responsive:true,plugins:{legend:{display:false},title:{display:true,text:'Total Messages Sent by User'}}}})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{className:\"text-2xl font-bold mb-6\",children:\"Total Amount Sent and Average Amount per Message\"})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Bar,{data:totalAmountData,options:{responsive:true,scales:{y1:{type:'linear',position:'left',title:{display:true,text:'Total Amount Sent ($)'}},y2:{type:'linear',position:'right',title:{display:true,text:'Average Amount per Message ($)'},grid:{drawOnChartArea:false// Prevent double grid lines\n}}},plugins:{legend:{display:true,position:'top'},title:{display:true,text:'Total Amount Sent and Average Amount per Message'}}}})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{className:\"text-2xl font-bold mb-6\",children:\"Longest Streaks by User\"})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Bar,{data:longestStreaksData,options:{indexAxis:'y',responsive:true,plugins:{legend:{display:false},title:{display:true,text:'Longest Streaks by User'}}}})})]})]});}export default Leaderboard;","map":{"version":3,"names":["useState","useEffect","axios","Card","CardHeader","CardTitle","CardContent","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","PointElement","Title","Tooltip","Legend","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","register","Leaderboard","userStats","setUserStats","error","setError","fetchLeaderboardData","token","localStorage","getItem","response","get","headers","Authorization","data","console","className","children","usernames","map","user","username","totalMessagesData","labels","datasets","label","total_messages","backgroundColor","borderColor","borderWidth","totalAmountData","type","total_amount","yAxisID","toFixed","fill","longestStreaksData","longest_streak","options","indexAxis","responsive","plugins","legend","display","title","text","scales","y1","position","y2","grid","drawOnChartArea"],"sources":["/Users/Chan Keet/Documents/web_app_project/99c/frontend/src/components/Leaderboard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Card, { CardHeader, CardTitle, CardContent } from './ui/Card';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport API_BASE_URL from '../apiConfig';\n\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend);\n\nfunction Leaderboard() {\n  const [userStats, setUserStats] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`${API_BASE_URL}/api/leaderboard`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setUserStats(response.data);\n        setError(null);\n      } catch (error) {\n        console.error('Error fetching leaderboard data:', error);\n        setError('Failed to load leaderboard data. Please try again later.');\n      }\n    };\n\n    fetchLeaderboardData();\n  }, []);\n\n  if (error) {\n    return <div className=\"text-center text-red-500\">{error}</div>;\n  }\n\n  // Prepare data for charts\n  const usernames = userStats.map(user => user.username);\n\n  // Total Messages Sent Data\n  const totalMessagesData = {\n    labels: usernames,\n    datasets: [\n      {\n        label: 'Total Messages Sent',\n        data: userStats.map(user => user.total_messages),\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // Total Amount Sent Data (Bar) and Average Amount Per Message (Line) Data\n  const totalAmountData = {\n    labels: usernames,\n    datasets: [\n      {\n        type: 'bar',\n        label: 'Total Amount Sent ($)',\n        data: userStats.map(user => user.total_amount),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n        yAxisID: 'y1',\n      },\n      {\n        type: 'line',\n        label: 'Average Amount per Message ($)',\n        data: userStats.map(user => (user.total_messages ? (user.total_amount / user.total_messages).toFixed(2) : 0)),\n        borderColor: 'rgba(255, 99, 132, 1)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        borderWidth: 2,\n        fill: false,\n        yAxisID: 'y2',\n      },\n    ],\n  };\n\n  // Longest Streak Data\n  const longestStreaksData = {\n    labels: usernames,\n    datasets: [\n      {\n        label: 'Longest Streak (Days)',\n        data: userStats.map(user => user.longest_streak),\n        backgroundColor: 'rgba(153, 102, 255, 0.5)',\n        borderColor: 'rgba(153, 102, 255, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"container mx-auto mt-20 p-4 space-y-8\">\n      {/* Card for Total Messages Sent */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-bold mb-6\">Total Messages Sent by User</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Bar \n            data={totalMessagesData} \n            options={{\n              indexAxis: 'y',\n              responsive: true,\n              plugins: {\n                legend: { display: false },\n                title: { display: true, text: 'Total Messages Sent by User' },\n              },\n            }}\n          />\n        </CardContent>\n      </Card>\n\n      {/* Card for Total Amount Sent (Bar) and Average Amount Per Message (Line) */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-bold mb-6\">Total Amount Sent and Average Amount per Message</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Bar \n            data={totalAmountData}\n            options={{\n              responsive: true,\n              scales: {\n                y1: {\n                  type: 'linear',\n                  position: 'left',\n                  title: {\n                    display: true,\n                    text: 'Total Amount Sent ($)',\n                  },\n                },\n                y2: {\n                  type: 'linear',\n                  position: 'right',\n                  title: {\n                    display: true,\n                    text: 'Average Amount per Message ($)',\n                  },\n                  grid: {\n                    drawOnChartArea: false, // Prevent double grid lines\n                  },\n                },\n              },\n              plugins: {\n                legend: {\n                  display: true,\n                  position: 'top',\n                },\n                title: {\n                  display: true,\n                  text: 'Total Amount Sent and Average Amount per Message',\n                },\n              },\n            }}\n          />\n        </CardContent>\n      </Card>\n\n      {/* Card for Longest Streaks */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-bold mb-6\">Longest Streaks by User</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Bar \n            data={longestStreaksData} \n            options={{\n              indexAxis: 'y',\n              responsive: true,\n              plugins: {\n                legend: { display: false },\n                title: { display: true, text: 'Longest Streaks by User' },\n              },\n            }}\n          />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Leaderboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}